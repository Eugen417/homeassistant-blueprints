id: homeassistant_person_tracker_telegram_v1.1

blueprint:
  name: üè† –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è üìç
  description: |
    –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∞/—É—Ö–æ–¥–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (person.XXX) —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.
    
    ‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: ID —á–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –∏–º–µ–Ω–∏ —Å—É—â–Ω–æ—Å—Ç–∏ `notify.xxx`.
    
    –¢–†–ï–ë–û–í–ê–ù–ò–ï: –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–æ–∫ –∏ –∫–æ–º–∞–Ω–¥ –≤ Telegram –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–±–µ–¥–∏—Ç—å—Å—è,
    —á—Ç–æ –≤–∞—à Telegram-–±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Ä–µ–∂–∏–º `platform: polling` –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º
    callback-—Å–æ–±—ã—Ç–∏–π (—Å–º. –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∏–∂–µ).

    ---
    **–ü–†–ò–ú–ï–† –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò TELEGRAM –í configuration.yaml** ü§ñ
    (–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ placeholder-–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–≤–æ–∏!)
    ---
    
    telegram_bot:
      - platform: polling # ‚ö†Ô∏è –ö–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫–æ–º–∞–Ω–¥/–∫–æ–ª–±—ç–∫–æ–≤
        api_key: "–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê"
        parse_mode: html
        
        # ‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ ID —á–∞—Ç–æ–≤
        allowed_chat_ids:
          - -1234567890123 # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
          - 987654321 # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® ID –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–¥–ª—è –∫–æ–ª–±—ç–∫–æ–≤)
          
  source_url: https://raw.githubusercontent.com/Eugen417/homeassistant-blueprints/refs/heads/main/person_tracker_RU.yaml
          
  domain: automation
  input:
    # 1. –°–ü–ò–°–û–ö –û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–• PERSON
    tracked_persons:
      name: üìùê¶Çñ®ÜêÄ™ñ†ã–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (person.XXX) üó∫Ô∏è
      description: –í—ã–±–µ—Ä–∏—Ç–µ person-—Å—É—â–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
      selector:
        entity:
          domain: person
          multiple: true
          
    # 2. –°–ï–†–í–ò–° –£–í–ï–î–û–ú–õ–ï–ù–ò–ô TELEGRAM
    telegram_notifications:
      name: ‚û§ –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Telegram (notify.xxx) üó∫Ô∏è
      description: –í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–Ω–æ—Å—Ç—å notify, —Å–æ–∑–¥–∞–Ω–Ω—É—é –¥–ª—è Telegram-–±–æ—Ç–∞.
      selector:
        entity:
          domain: notify
          integration: telegram_bot

trigger:
  # –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è —É—Ö–æ–¥–∞/–ø—Ä–∏—Ö–æ–¥–∞
  - platform: state
    entity_id: !input tracked_persons
    to: 'not_home'
  - platform: state
    entity_id: !input tracked_persons
    to: 'home'
  
  # –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏)
  - id: location_request
    platform: event
    event_type: telegram_callback

action:
  # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ-ID –∏–∑ input –∏ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –ò–ó–í–õ–ï–ö–ê–ï–ú ID —á–∞—Ç–∞
  - variables:
      telegram_notifications_id: !input telegram_notifications
      tracked_persons_ids: !input tracked_persons

      # --- –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï ID –ß–ê–¢–ê –ò–ó notify.xxx ---
      notify_target_id: >-
        {% set entity_id = telegram_notifications_id | default('') %}
        {% set chat_id_part = entity_id | regex_replace(find='^.+_', replace='') | string | trim %}
        {% set final_id = chat_id_part %}
        {% if final_id | length > 10 and not final_id.startswith('-') %}
          {% set final_id = '-' ~ final_id %}
        {% endif %}
        {{ [final_id] }}
      
  - choose:
      # –í–´–ë–û–† 1: –£—Ö–æ–¥ –∏–∑ –¥–æ–º–∞ üö∂
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'state' and trigger.to_state.state == 'not_home' }}"
        sequence:
          - variables:
              triggered_person_id: "{{ trigger.entity_id }}"
              triggered_person_name: "{{ state_attr(trigger.entity_id, 'friendly_name') | default(trigger.entity_id.split('.')[1]) }}"
              button_command: "/–≥–¥–µ_{{ trigger.entity_id.split('.')[1] }}"
          
          - service: telegram_bot.send_message
            data:
              message: "{{ triggered_person_name }} –≤—ã—à–µ–ª –∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã üö™"
              target: "{{ notify_target_id }}"
              parse_mode: plain_text
              inline_keyboard:
                - "–ì–¥–µ —Å–µ–π—á–∞—Å {{ triggered_person_name }}? üó∫Ô∏è:{{ button_command }}"
          
      # –í–´–ë–û–† 2: –ü—Ä–∏—Ö–æ–¥ –¥–æ–º–æ–π üè°
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'state' and trigger.to_state.state == 'home' }}"
        sequence:
          - variables:
              triggered_person_name: "{{ state_attr(trigger.entity_id, 'friendly_name') | default(trigger.entity_id.split('.')[1]) }}"
              
          - service: telegram_bot.send_message
            data:
              message: "{{ triggered_person_name }} –≤–µ—Ä–Ω—É–ª—Å—è –¥–æ–º–æ–π! üëã"
              target: "{{ notify_target_id }}"
              parse_mode: plain_text
          
      # –í–´–ë–û–† 3: –ó–∞–ø—Ä–æ—Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (Callback) üìç
      - conditions:
          - condition: trigger
            id: location_request
          - condition: template
            value_template: >
              {% set cmd_part = trigger.event.data.command.split('_')[1] | default('none') | lower %}
              {{ trigger.event.data.command.startswith('/–≥–¥–µ_') and 'person.' + cmd_part in tracked_persons_ids }}
        sequence:
          - variables:
              target_name_id: "{{ trigger.event.data.command.split('_')[1] }}"
              target_person_id: "person.{{ target_name_id }}" 
              target_person_name: "{{ state_attr(target_person_id, 'friendly_name') | default(target_person_id.split('.')[1]) }}"
              chat_id_response: "{{ trigger.event.data.chat_id | int }}"
              # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∑–∞–ø—Ä–æ—Å–∏–≤—à–µ–≥–æ
              sender_name: >-
                {% set first_name = trigger.event.data.from_first | default('') %}
                {% set user_id = trigger.event.data.user_id | default('') %}
                
                {% if first_name | length > 0 %}
                  {{ first_name }}
                {% elif user_id | string | length > 0 %}
                  [ID: {{ user_id }}]
                {% else %}
                  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                {% endif %}
          
          # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback (—É–±–∏—Ä–∞–µ–º –Ω–∞–¥–ø–∏—Å—å "–ó–∞–≥—Ä—É–∑–∫–∞...")
          - service: telegram_bot.answer_callback_query
            data:
              callback_query_id: "{{ trigger.event.data.id }}"
              message: "–ó–∞–ø—Ä–æ—Å –æ—Ç {{ sender_name }}. –ò—â—É {{ target_person_name }}... ‚è≥"
              show_alert: false
          
          # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏ –∫–∞—Ä—Ç—ã
          - choose:
              # –ï—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ï–°–¢–¨
              - conditions:
                  - condition: template
                    value_template: "{{ state_attr(target_person_id, 'latitude') is not none }}"
                sequence:
                  - variables:
                      # –§–ò–ö–°: –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å—Ç—É—é –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ HTML-—Ç–µ–≥–æ–≤
                      status_message: |-
                        {% if is_state(target_person_id, 'home') %}
                          {{ target_person_name }} –¥–æ–º–∞! üè°
                        {% else %}
                          {{ target_person_name }} –Ω–µ –¥–æ–º–∞! üó∫Ô∏è
                        {% endif %}
                        –ó–∞–ø—Ä–æ—à–µ–Ω–æ: {{ sender_name }}
                  
                  # 1. –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ü–ï–†–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï (–°—Ç–∞—Ç—É—Å + –ò–º—è)
                  - service: telegram_bot.send_message
                    data:
                      target: "{{ chat_id_response }}"
                      message: "{{ status_message }}"
                      parse_mode: plain_text # –ò—Å–ø–æ–ª—å–∑—É–µ–º plain_text
                      
                  # 2. –û–¢–ü–†–ê–í–õ–Ø–ï–ú –í–¢–û–†–û–ï –°–û–û–ë–©–ï–ù–ò–ï (–ö–∞—Ä—Ç–∞)
                  - service: telegram_bot.send_location
                    data:
                      target: "{{ chat_id_response }}"
                      latitude: "{{ state_attr(target_person_id, 'latitude') }}"
                      longitude: "{{ state_attr(target_person_id, 'longitude') }}"
                  
              # –ï—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ù–ï–¢
              - conditions:
                  - condition: template
                    value_template: "{{ state_attr(target_person_id, 'latitude') is none }}"
                sequence:
                  - service: telegram_bot.send_message
                    data:
                      target: "{{ chat_id_response }}"
                      # –§–ò–ö–°: –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å—Ç—É—é –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ HTML-—Ç–µ–≥–æ–≤
                      message: |-
                        ‚ö†Ô∏è –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ {{ target_person_name }} —Å–µ–π—á–∞—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. ‚ùì
                        –ó–∞–ø—Ä–æ—à–µ–Ω–æ: {{ sender_name }}
                      parse_mode: plain_text # –ò—Å–ø–æ–ª—å–∑—É–µ–º plain_text

mode: single
