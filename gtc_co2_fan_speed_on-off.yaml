blueprint:
  name: üí® –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Ç–æ—á–Ω–æ–π –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–µ–π –ø–æ CO2 v17 (–¥–ª—è ventmachine –∏ –Ω–µ —Ç–æ–ª—å–∫–æ)
  description: |
    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–º –ø–æ —É—Ä–æ–≤–Ω—é CO2, –¥–æ–±–∞–≤–ª—è–µ—Ç
    –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Telegram –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.
    –í –≤–µ—Ä—Å–∏–∏ v17 –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.
  source_url: https://raw.githubusercontent.com/Eugen417/homeassistant-blueprints/refs/heads/main/gtc_co2_fan_speed_on-off.yaml # –ò–∑–º–µ–Ω–∏—Ç–µ URL, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  domain: automation

  input:
    # --- –û–°–ù–û–í–ù–´–ï –°–£–©–ù–û–°–¢–ò ---
    co2_sensors:
      name: –î–∞—Ç—á–∏–∫–∏ CO2
      selector:
        entity:
          domain: sensor
          device_class: carbon_dioxide
          multiple: true
    target_fan:
      name: ñ£ò –¶–µ–ª–µ–≤–æ–π –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä
      default: fan.gtc_fan
      selector:
        entity:
          domain: fan
    automation_mode_select:
      name: ‚öôÔ∏è –ü–æ–º–æ—â–Ω–∏–∫ –†–µ–∂–∏–º–∞ (Input Select)
      description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π `input_select` —Å –æ–ø—Ü–∏—è–º–∏: `RUNNING` –∏ `WAITING`.'
      selector:
        entity:
          domain: input_select
    previous_co2_helper:
      name: üíæ –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ CO2
      selector:
        entity:
          domain: input_number
    telegram_notifications:
      name: üì¢ –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Telegram (notify)
      description: –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (notify.telegram_bot...).
      selector:
        entity:
          domain: notify
          multiple: true
          
    # --- –ù–ê–°–¢–†–û–ô–ö–ò –í–†–ï–ú–ï–ù–ò –ò –ü–û–†–û–ì–û–í ---
    update_frequency: # <-- –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û
      name: ‚è±Ô∏é –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (minutes)
      description: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å –∫–æ—Ç–æ—Ä–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç CO2 –∏ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/5" –¥–ª—è –∫–∞–∂–¥—ã—Ö 5 –º–∏–Ω—É—Ç). –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ time_pattern.
      default: "/5"
      selector:
        text:
    daily_alert_time:
      name: ‚è∞ –í—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
      description: |
        –í—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: –µ—Å–ª–∏ CO2 –≤—ã—Å–æ–∫, –∞ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä
        –≤—ã–∫–ª—é—á–µ–Ω/–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω **–≤—Ä—É—á–Ω—É—é –∏–ª–∏ –¥—Ä—É–≥–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π**, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ
        Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä—É—á–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è.
      default: "10:00:00"
      selector:
        time:
    low_co2_max:
      name: üü¢ –ù–∏–∂–Ω–∏–π –ø–æ—Ä–æ–≥ CO2 (–º–∞–∫—Å, ppm)
      description: –≠—Ç–æ **—Ü–µ–ª–µ–≤–æ–π –ø–æ—Ä–æ–≥**, –Ω–∏–∂–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å CO2. –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –∑–∞–º–µ–¥–ª—è–µ—Ç—Å—è –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è.
      default: 550
      selector:
        number: { min: 400, max: 1000, step: 1, mode: box, unit_of_measurement: ppm }
    max_speed:
      name: üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞ (%)
      default: 40
      selector:
        number: { min: 10, max: 100, step: 1, mode: slider, unit_of_measurement: '%' }
    co2_increase_threshold:
      name: üìà –ü–æ—Ä–æ–≥ –≤–∫–ª—é—á–µ–Ω–∏—è CO2 (ppm)
      description: –ù–∞ —Å–∫–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π CO2 –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—Å–∏—Ç—å "**–ù–∏–∂–Ω–∏–π –ø–æ—Ä–æ–≥ CO2**" (`low_co2_max`), —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä.
      default: 15
      selector:
        number: { min: 0, max: 100, step: 1, mode: box, unit_of_measurement: ppm }
    co2_change_threshold:
      name: üîÑ –ü–æ—Ä–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è CO2 (ppm)
      description: |
        –ù–∞ —Å–∫–æ–ª—å–∫–æ CO2 –¥–æ–ª–∂–µ–Ω –∏–∑–º–µ–Ω–∏—Ç—å—Å—è (–≤—ã—Ä–∞—Å—Ç–∏ –∏–ª–∏ —É–ø–∞—Å—Ç—å) –∑–∞ 5-–º–∏–Ω—É—Ç–Ω—ã–π
        –∏–Ω—Ç–µ—Ä–≤–∞–ª, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞ –Ω–∞ 10% –≤–≤–µ—Ä—Ö
        –∏–ª–∏ –≤–Ω–∏–∑.
      default: 15
      selector:
        number: { min: 1, max: 50, step: 1, mode: box, unit_of_measurement: ppm }
    min_start_speed:
      name: üí® –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ (%)
      description: –°–∫–æ—Ä–æ—Å—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å–±—Ä–æ—Å–∏—Ç—Å—è –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã. 0 - –≤—ã–∫–ª—é—á–∞–µ—Ç –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é.
      default: 0
      selector:
        number: { min: 0, max: 100, step: 1, mode: slider, unit_of_measurement: '%' }

# --- –¢–†–ò–ì–ì–ï–†–´ ( TRIGGERS ) ---
trigger:
  - minutes: !input update_frequency # <-- –ò–°–ü–†–ê–í–õ–ï–ù–û
    id: time_based
    platform: time_pattern
  - event_type: telegram_callback
    event_data:
      command: /turn_on_gtc_fan
    id: telegram_callback
    platform: event
  - at: !input daily_alert_time
    id: daily_alert
    platform: time

# --- –î–ï–ô–°–¢–í–ò–Ø ( ACTIONS ) ---
action:
  # 1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: –ú–∞–ø–ø–∏–Ω–≥ Input'–æ–≤ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
  - variables:
      # –ú–∞–ø–ø–∏–Ω–≥ Input'–æ–≤
      co2_sensors_list: !input co2_sensors
      target_fan_entity: !input target_fan
      low_co2_max_val: !input low_co2_max
      max_speed_val: !input max_speed
      co2_increase_threshold_val: !input co2_increase_threshold
      co2_change_threshold_val: !input co2_change_threshold
      start_speed_val: !input min_start_speed
      previous_co2_helper_entity_id: !input previous_co2_helper
      mode_select_entity_id: !input automation_mode_select
      telegram_notify_entities: !input telegram_notifications

      # –í—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      current_mode: "{{ states(mode_select_entity_id) }}"
      is_fan_on: "{{ is_state(target_fan_entity, 'on') }}"
      min_fan_speed: >
        {% if start_speed_val | float == 0 %} 10 {% else %} {{ start_speed_val
        }} {% endif %}
      avg_co2: >
        {% set valid = co2_sensors_list | map('states') | map('float',0) |
        select('>',0) | list %} {% if valid | length > 0 %} {{ (valid | sum /
        valid | length) | round(1) }} {% else %} 0 {% endif %}
      current_speed: "{{ state_attr(target_fan_entity, 'percentage') | float(0) }}"
      previous_co2: "{{ states(previous_co2_helper_entity_id) | float(0) }}"
      target_chat_ids: >-
        {% set selected = telegram_notify_entities | default([]) %} {%
        set ids = selected | map('regex_replace', find='^.+_', replace='') |
        list %} {% set ns = namespace(targets=[]) %} {% for id_str in ids %}
          {% set clean_id = id_str | string | trim %}
          {% if clean_id | length > 10 and not clean_id.startswith('-') %}
            {% set ns.targets = ns.targets + ['-' ~ clean_id] %}
          {% else %}
            {% set ns.targets = ns.targets + [clean_id] %}
          {% endif %}
        {% endfor %} {{ ns.targets }}

  # 2. –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ (Choose block)
  - choose:
      # --- –ë–õ–û–ö 1: time_based (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç) ---
    - conditions:
      - condition: trigger
        id: time_based
      sequence:
        - choose:
            # - –£–°–õ–û–í–ò–ï 1.1: CO2 –≤—ã—Å–æ–∫–∏–π, –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä OFF -> –í–∫–ª—é—á–∏—Ç—å
          - conditions:
            - condition: template
              value_template: "{{ not is_fan_on }}"
            - condition: template
              value_template: >
                {{ avg_co2 >= (low_co2_max_val | float +
                co2_increase_threshold_val | float) }}
            - condition: template
              value_template: "{{ current_mode == 'RUNNING' }}"
            sequence:
              - target:
                  entity_id: "{{ target_fan_entity }}"
                service: fan.turn_on
              - delay:
                  seconds: 50
              - target:
                  entity_id: "{{ target_fan_entity }}"
                data:
                  percentage: "{{ min_fan_speed }}"
                service: fan.set_percentage
              - target:
                  entity_id: "{{ mode_select_entity_id }}"
                data:
                  option: WAITING
                service: input_select.select_option
            # - –£–°–õ–û–í–ò–ï 1.2: –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä ON -> –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞
          - conditions:
            - condition: template
              value_template: "{{ is_fan_on }}"
            sequence:
              - choose:
                  # - –£–°–õ–û–í–ò–ï 1.2.1: CO2 –Ω–∏–∑–∫–∏–π -> –í—ã–∫–ª—é—á–∏—Ç—å / –°–±—Ä–æ—Å–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å
                - conditions:
                  - condition: template
                    value_template: |
                      {{ avg_co2 < low_co2_max_val | float }}
                  sequence:
                    - if:
                      - condition: template
                        value_template: "{{ start_speed_val | float == 0 }}"
                      then:
                        - target:
                            entity_id: "{{ target_fan_entity }}"
                          data:
                            percentage: 10
                          service: fan.set_percentage
                        - delay:
                            seconds: 5
                        - target:
                            entity_id: "{{ target_fan_entity }}"
                          service: fan.turn_off
                        - target:
                            entity_id: "{{ mode_select_entity_id }}"
                          data:
                            option: RUNNING
                          service: input_select.select_option
                      else:
                        - target:
                            entity_id: "{{ target_fan_entity }}"
                          data:
                            percentage: "{{ start_speed_val }}"
                          service: fan.set_percentage
                  # - –£–°–õ–û–í–ò–ï 1.2.2: CO2 –ø–∞–¥–∞–µ—Ç -> –£–º–µ–Ω—å—à–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å
                - conditions:
                  - condition: template
                    value_template: >
                      {{ (previous_co2 - avg_co2) >=
                      co2_change_threshold_val | float }}
                  sequence:
                    - variables:
                        new_speed: "{{ [current_speed - 10, min_fan_speed] | max }}"
                    - target:
                        entity_id: "{{ target_fan_entity }}"
                      data:
                        percentage: "{{ new_speed }}"
                      service: fan.set_percentage
                  # - –£–°–õ–û–í–ò–ï 1.2.3: CO2 —Ä–∞—Å—Ç–µ—Ç -> –£–≤–µ–ª–∏—á–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å
                - conditions:
                  - condition: template
                    value_template: |
                      {{ avg_co2 > previous_co2 }}
                  sequence:
                    - variables:
                        new_speed: "{{ [current_speed + 10, max_speed_val] | min }}"
                    - target:
                        entity_id: "{{ target_fan_entity }}"
                      data:
                        percentage: "{{ new_speed }}"
                      service: fan.set_percentage
        - data:
            entity_id: "{{ previous_co2_helper_entity_id }}"
            value: "{{ avg_co2 }}"
          service: input_number.set_value

      # --- –ë–õ–û–ö 2: daily_alert (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ) ---
    - conditions:
      - condition: trigger
        id: daily_alert
      sequence:
        - choose:
            # - –£–°–õ–û–í–ò–ï 2.1: CO2 –≤—ã—Å–æ–∫–∏–π, –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä OFF, –†–µ–∂–∏–º WAITING -> –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          - conditions:
            - condition: template
              value_template: >
                {{ avg_co2 >= (low_co2_max_val | float +
                co2_increase_threshold_val | float) }}
            - condition: template
              value_template: "{{ not is_fan_on }}"
            - condition: template
              value_template: "{{ current_mode == 'WAITING' }}"
            - condition: template
              value_template: "{{ target_chat_ids | length > 0 }}"
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: "{{ target_chat_ids }}"
                  message: >
                    {# 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–∫–∞ (Title) #} {%- set
                    message_title = "üí® \*–í–Ω–∏–º–∞–Ω–∏–µ: –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞
                    –í–µ–Ω—Ç—É—Å—Ç–∞–Ω–æ–≤–∫–∏\*" %}

                    {# 2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¢–µ–ª–∞ –°–æ–æ–±—â–µ–Ω–∏—è (Message Body) #} {%-
                    set co2_turn_on_threshold_calculated = ((low_co2_max_val | float + co2_increase_threshold_val | float) | round(0)) -%}
                    {%- set raw_message_body = "–£—Ä–æ–≤–µ–Ω—å CO2 (" ~ (avg_co2 |
                    round(0)) ~ " ppm) –≤—ã—à–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ (–ø–æ—Ä–æ–≥: " ~
                    co2_turn_on_threshold_calculated ~ " ppm), –Ω–æ
                    –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–Ω—Ç—É—Å—Ç–∞–Ω–æ–≤–∫—É, –ø–æ—Ç–æ–º—É
                    —á—Ç–æ –æ–Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –¥—Ä—É–≥–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π.
                    –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: WAITING." %}

                    {# 3. –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è MarkdownV2
                    (–ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ —Ç–µ–ª—É!) #} {%- set escaped_body =
                    raw_message_body | replace('&', '&amp;') | replace('~',
                    '\~') | replace('`', '\`') | replace('>', '\>') |
                    replace('#', '\#') | replace('+', '\+') | replace('-',
                    '\-') | replace('=', '\=') | replace('|', '\|') |
                    replace('{', '\{') | replace('}', '\}') | replace('.',
                    '\.') | replace('!', '\!') | replace('*', '\*') |
                    replace('_', '\_') | replace('[', '\[') | replace(']',
                    '\]') | replace('(', '\(') | replace(')', '\)') |
                    replace('%', '\%') %}

                    {# 4. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –¢–µ–ª–∞ #} {{ message_title ~
                    "\n\n" ~ escaped_body }}
                  parse_mode: markdownv2
                  inline_keyboard:
                    - "–í–ö–õ–Æ–ß–ò–¢–¨ FAN:/turn_on_{{ target_fan_entity.split('.')[-1] }}"
    
      # --- –ë–õ–û–ö 3: telegram_callback (—Ä—É—á–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ) ---
    - conditions:
      - condition: trigger
        id: telegram_callback
      sequence:
        - service: telegram_bot.answer_callback_query
          data:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å gtc_fan –∏ —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∏...
            show_alert: false
        - choose:
            # - –£–°–õ–û–í–ò–ï 3.1: –£–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
          - conditions:
            - condition: template
              value_template: "{{ is_fan_on }}"
            - condition: template
              value_template: "{{ current_mode in ['WAITING', 'RUNNING'] }}"
            sequence:
              - alias: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                service: telegram_bot.send_message
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message: >
                    ‚ÑπÔ∏è –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä <b>{{ target_fan_entity.split('.')[-1] }}</b> —É–∂–µ –≤–∫–ª—é—á–µ–Ω! –°–∫–æ—Ä–æ—Å—Ç—å:
                    <b>{{ state_attr(target_fan_entity, 'percentage') }}%</b>.
                    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞ (—Ä–µ–∂–∏–º: {{
                    states(mode_select_entity_id)
                    }}). –í–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
                  parse_mode: html
            # - –£–°–õ–û–í–ò–ï 3.2: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, CO2 –Ω–∏–∑–∫–∏–π
          - conditions:
            - condition: template
              value_template: "{{ not is_fan_on }}"
            - condition: template
              value_template: "{{ current_mode in ['WAITING', 'RUNNING'] }}"
            - condition: template
              value_template: >
                {{
                states(previous_co2_helper_entity_id)
                | float(0)
                < (low_co2_max_val | float(0) + co2_increase_threshold_val | float(0)) }}
            sequence:
              - alias: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è (CO2 –Ω–∏–∑–∫–∏–π)
                service: telegram_bot.send_message
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message: >
                    ‚ÑπÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è (<b>{{
                    states(mode_select_entity_id)
                    }}</b>). –£—Ä–æ–≤–µ–Ω—å CO2 ({{
                    states(previous_co2_helper_entity_id)
                    }} ppm) –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞ ({{
                    (low_co2_max_val | float(0) + co2_increase_threshold_val | float(0)) | round(0)
                    }} ppm). –í–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é –Ω–µ
                    —Ç—Ä–µ–±—É–µ—Ç—Å—è.
                  parse_mode: html
            # - –£–°–õ–û–í–ò–ï 3.3: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, CO2 –≤—ã—Å–æ–∫–∏–π -> –í–∫–ª—é—á–∏—Ç—å
          - conditions:
            - condition: template
              value_template: "{{ not is_fan_on }}"
            - condition: template
              value_template: "{{ current_mode in ['WAITING', 'RUNNING'] }}"
            - condition: template
              value_template: >
                {{
                states(previous_co2_helper_entity_id)
                | float(0)
                >= (low_co2_max_val | float(0) + co2_increase_threshold_val | float(0)) }}
            sequence:
              - alias: "–í–∫–ª—é—á–µ–Ω–∏–µ - –®–∞–≥ 1: –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞"
                service: fan.turn_on
                target:
                  entity_id: "{{ target_fan_entity }}"
              - delay: "00:00:50"
              - choose:
                - conditions:
                  - condition: template
                    value_template: "{{ not is_state(target_fan_entity, 'on') }}"
                  sequence:
                    - service: telegram_bot.send_message
                      data:
                        target: "{{ trigger.event.data.chat_id }}"
                        message: >-
                          –ü–æ–ø—ã—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è 1: –Ω–µ —É–¥–∞–ª–æ—Å—å ‚ùå. –ü—Ä–æ–±—É—é
                          –ø–æ–≤—Ç–æ—Ä–Ω–æ...
                    - service: fan.turn_on
                      target:
                        entity_id: "{{ target_fan_entity }}"
                    - delay: "00:00:50"
                default: []

              - choose:
                - conditions:
                  - condition: template
                    value_template: "{{ is_state(target_fan_entity, 'on') }}"
                  sequence:
                    - service: input_select.select_option
                      data:
                        entity_id: "{{ mode_select_entity_id }}"
                        option: RUNNING
                      enabled: false
                    - service: telegram_bot.send_message
                      data:
                        target: "{{ trigger.event.data.chat_id }}"
                        message: >-
                          ‚úÖ {{ target_fan_entity.split('.')[-1] }} –≤–∫–ª—é—á–µ–Ω! –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                          —É—Å–ø–µ—à–Ω–æ.
                        parse_mode: html
                - conditions:
                  - condition: template
                    value_template: "{{ not is_state(target_fan_entity, 'on') }}"
                  sequence:
                    - service: telegram_bot.send_message
                      data:
                        target: "{{ trigger.event.data.chat_id }}"
                        message: >
                          ‚ùå <b>{{ target_fan_entity.split('.')[-1] }}</b> –Ω–µ –≤–∫–ª—é—á–∏–ª—Å—è –ø–æ—Å–ª–µ –¥–≤—É—Ö
                          –ø–æ–ø—ã—Ç–æ–∫! –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
                        parse_mode: html
            
          # - –£–°–õ–û–í–ò–ï 3.4: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å (default)
          default: 
            - alias: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å/–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å
              service: telegram_bot.send_message
              data:
                target: "{{ trigger.event.data.chat_id }}"
                message: "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ (–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: <b>{{ states(mode_select_entity_id) }}</b>).\_ –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä: <b>{{ states(target_fan_entity) }}</b>. –¢–µ–∫—É—â–∏–π CO2: <b>{{ states(previous_co2_helper_entity_id) }} ppm</b>. –ü–æ—Ä–æ–≥ –≤–∫–ª—é—á–µ–Ω–∏—è: <b>{{ (low_co2_max_val | float(0) + co2_increase_threshold_val | float(0)) | round(0) }} ppm</b>.\n"
                parse_mode: html

        # –≠–¢–û –î–ï–ô–°–¢–í–ò–ï –î–û–õ–ñ–ù–û –í–´–ü–û–õ–ù–Ø–¢–¨–°–Ø –í–°–ï–ì–î–ê –í –ö–û–ù–¶–ï –ë–õ–û–ö–ê 3
        - service: input_number.set_value
          data:
            entity_id: "{{ previous_co2_helper_entity_id }}"
            value: "{{ avg_co2 }}"

mode: single
